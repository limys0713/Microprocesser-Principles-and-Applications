

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Thu Jan 04 16:04:44 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    10                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    11                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    12                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    13                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    14                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    15                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    16                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    17   000000                     
    18                           ; Generated 18/08/2023 GMT
    19                           ; 
    20                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution. Publication is not required when
    34                           ;        this file is used in an embedded application.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC18F4520 Definitions
    50                           ; 
    51                           ; SFR Addresses
    52   000000                     _PORTB	set	3969
    53   000000                     _TRISBbits	set	3987
    54   000000                     _CCP1CONbits	set	4029
    55   000000                     _INTCONbits	set	4082
    56   000000                     _ADCON1	set	4033
    57   000000                     _CCPR1L	set	4030
    58   000000                     _T2CONbits	set	4042
    59   000000                     _PR2	set	4043
    60   000000                     _RCONbits	set	4048
    61   000000                     _OSCCONbits	set	4051
    62   000000                     _TRISC	set	3988
    63   000000                     _LATC	set	3979
    64                           
    65                           ; #config settings
    66                           
    67                           	psect	cinit
    68   000736                     __pcinit:
    69                           	callstack 0
    70   000736                     start_initialization:
    71                           	callstack 0
    72   000736                     __initialization:
    73                           	callstack 0
    74                           
    75                           ; Clear objects allocated to COMRAM (3 bytes)
    76   000736  6A03               	clrf	(__pbssCOMRAM+2)& (0+255),c
    77   000738  6A02               	clrf	(__pbssCOMRAM+1)& (0+255),c
    78   00073A  6A01               	clrf	__pbssCOMRAM& (0+255),c
    79   00073C                     end_of_initialization:
    80                           	callstack 0
    81   00073C                     __end_of__initialization:
    82                           	callstack 0
    83   00073C  9006               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
    84   00073E  9206               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
    85   000740  0100               	movlb	0
    86   000742  EF77  F003         	goto	_main	;jump to C main() function
    87                           
    88                           	psect	bssCOMRAM
    89   000001                     __pbssCOMRAM:
    90                           	callstack 0
    91   000001                     _cycle:
    92                           	callstack 0
    93   000001                     	ds	2
    94   000003                     _count:
    95                           	callstack 0
    96   000003                     	ds	1
    97                           
    98                           	psect	cstackCOMRAM
    99   000004                     __pcstackCOMRAM:
   100                           	callstack 0
   101   000004                     ??_H_ISR:
   102   000004                     
   103                           ; 1 bytes @ 0x0
   104   000004                     	ds	2
   105   000006                     
   106                           ; 1 bytes @ 0x2
   107 ;;
   108 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   109 ;;
   110 ;; *************** function _main *****************
   111 ;; Defined at:
   112 ;;		line 109 in file "bonus_main.c"
   113 ;; Parameters:    Size  Location     Type
   114 ;;		None
   115 ;; Auto vars:     Size  Location     Type
   116 ;;		None
   117 ;; Return value:  Size  Location     Type
   118 ;;                  1    wreg      void 
   119 ;; Registers used:
   120 ;;		wreg, status,2
   121 ;; Tracked objects:
   122 ;;		On entry : 0/0
   123 ;;		On exit  : 0/0
   124 ;;		Unchanged: 0/0
   125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   126 ;;      Params:         0       0       0       0       0       0       0
   127 ;;      Locals:         0       0       0       0       0       0       0
   128 ;;      Temps:          0       0       0       0       0       0       0
   129 ;;      Totals:         0       0       0       0       0       0       0
   130 ;;Total ram usage:        0 bytes
   131 ;; Hardware stack levels required when called: 1
   132 ;; This function calls:
   133 ;;		Nothing
   134 ;; This function is called by:
   135 ;;		Startup code after reset
   136 ;; This function uses a non-reentrant model
   137 ;;
   138                           
   139                           	psect	text0
   140   0006EE                     __ptext0:
   141                           	callstack 0
   142   0006EE                     _main:
   143                           	callstack 30
   144   0006EE                     
   145                           ;bonus_main.c: 111:     ADCON1 = 0x0f;
   146   0006EE  0E0F               	movlw	15
   147   0006F0  6EC1               	movwf	193,c	;volatile
   148   0006F2                     
   149                           ;bonus_main.c: 114:     T2CONbits.TMR2ON = 0b1;
   150   0006F2  84CA               	bsf	202,2,c	;volatile
   151                           
   152                           ;bonus_main.c: 115:     T2CONbits.T2CKPS = 0b01;
   153   0006F4  50CA               	movf	202,w,c	;volatile
   154   0006F6  0BFC               	andlw	-4
   155   0006F8  0901               	iorlw	1
   156   0006FA  6ECA               	movwf	202,c	;volatile
   157                           
   158                           ;bonus_main.c: 118:     OSCCONbits.IRCF = 0b001;
   159   0006FC  50D3               	movf	211,w,c	;volatile
   160   0006FE  0B8F               	andlw	-113
   161   000700  0910               	iorlw	16
   162   000702  6ED3               	movwf	211,c	;volatile
   163                           
   164                           ;bonus_main.c: 121:     CCP1CONbits.CCP1M = 0b1100;
   165   000704  50BD               	movf	189,w,c	;volatile
   166   000706  0BF0               	andlw	-16
   167   000708  090C               	iorlw	12
   168   00070A  6EBD               	movwf	189,c	;volatile
   169   00070C                     
   170                           ;bonus_main.c: 124:     TRISBbits.RB0 = 1;
   171   00070C  8093               	bsf	147,0,c	;volatile
   172                           
   173                           ;bonus_main.c: 125:     PORTB = 0;
   174   00070E  0E00               	movlw	0
   175   000710  6E81               	movwf	129,c	;volatile
   176                           
   177                           ;bonus_main.c: 128:     TRISC = 0;
   178   000712  0E00               	movlw	0
   179   000714  6E94               	movwf	148,c	;volatile
   180                           
   181                           ;bonus_main.c: 129:     LATC = 0;
   182   000716  0E00               	movlw	0
   183   000718  6E8B               	movwf	139,c	;volatile
   184   00071A                     
   185                           ;bonus_main.c: 131:     RCONbits.IPEN = 0;
   186   00071A  9ED0               	bcf	208,7,c	;volatile
   187   00071C                     
   188                           ;bonus_main.c: 133:     INTCONbits.INT0E = 1;
   189   00071C  88F2               	bsf	242,4,c	;volatile
   190   00071E                     
   191                           ;bonus_main.c: 134:     INTCONbits.INT0F = 0;
   192   00071E  92F2               	bcf	242,1,c	;volatile
   193   000720                     
   194                           ;bonus_main.c: 135:     INTCONbits.GIE = 1;
   195   000720  8EF2               	bsf	242,7,c	;volatile
   196                           
   197                           ;bonus_main.c: 143:     PR2 = 0x9b;
   198   000722  0E9B               	movlw	155
   199   000724  6ECB               	movwf	203,c	;volatile
   200                           
   201                           ;bonus_main.c: 151:     CCPR1L = 0x04;
   202   000726  0E04               	movlw	4
   203   000728  6EBE               	movwf	190,c	;volatile
   204                           
   205                           ;bonus_main.c: 152:     CCP1CONbits.DC1B = 0b00;
   206   00072A  0ECF               	movlw	-49
   207   00072C  16BD               	andwf	189,f,c	;volatile
   208   00072E                     l51:
   209   00072E  EF97  F003         	goto	l51
   210   000732  EF07  F000         	goto	start
   211   000736                     __end_of_main:
   212                           	callstack 0
   213                           
   214 ;; *************** function _H_ISR *****************
   215 ;; Defined at:
   216 ;;		line 76 in file "bonus_main.c"
   217 ;; Parameters:    Size  Location     Type
   218 ;;		None
   219 ;; Auto vars:     Size  Location     Type
   220 ;;		None
   221 ;; Return value:  Size  Location     Type
   222 ;;                  1    wreg      void 
   223 ;; Registers used:
   224 ;;		wreg, status,2, status,0
   225 ;; Tracked objects:
   226 ;;		On entry : 0/0
   227 ;;		On exit  : 0/0
   228 ;;		Unchanged: 0/0
   229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   230 ;;      Params:         0       0       0       0       0       0       0
   231 ;;      Locals:         0       0       0       0       0       0       0
   232 ;;      Temps:          2       0       0       0       0       0       0
   233 ;;      Totals:         2       0       0       0       0       0       0
   234 ;;Total ram usage:        2 bytes
   235 ;; Hardware stack levels used: 1
   236 ;; This function calls:
   237 ;;		Nothing
   238 ;; This function is called by:
   239 ;;		Interrupt level 2
   240 ;; This function uses a non-reentrant model
   241 ;;
   242                           
   243                           	psect	intcode
   244   000008                     __pintcode:
   245                           	callstack 0
   246   000008                     _H_ISR:
   247                           	callstack 30
   248                           
   249                           ;incstack = 0
   250   000008  8206               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   251   00000A  ED01  F003         	call	int_func,f	;refresh shadow registers
   252                           
   253                           	psect	intcode_body
   254   000602                     __pintcode_body:
   255                           	callstack 30
   256   000602                     int_func:
   257                           	callstack 30
   258   000602  0006               	pop		; remove dummy address from shadow register refresh
   259   000604                     
   260                           ;bonus_main.c: 77:     while(INTCONbits.INT0F != 0){
   261   000604  EF6E  F003         	goto	i2l35
   262   000608                     i2l732:
   263                           
   264                           ;bonus_main.c: 84:                 if(CCP1CONbits.DC1B == 0b11){
   265   000608  38BD               	swapf	189,w,c	;volatile
   266   00060A  0B03               	andlw	3
   267   00060C  0A03               	xorlw	3
   268   00060E  A4D8               	btfss	status,2,c
   269   000610  EF0C  F003         	goto	i2u1_41
   270   000614  EF0E  F003         	goto	i2u1_40
   271   000618                     i2u1_41:
   272   000618  EF11  F003         	goto	i2l738
   273   00061C                     i2u1_40:
   274   00061C                     
   275                           ;bonus_main.c: 85:                     CCP1CONbits.DC1B = 0b00;
   276   00061C  0ECF               	movlw	-49
   277   00061E  16BD               	andwf	189,f,c	;volatile
   278   000620                     
   279                           ;bonus_main.c: 86:                     CCPR1L++;
   280   000620  2ABE               	incf	190,f,c	;volatile
   281   000622                     i2l738:
   282                           
   283                           ;bonus_main.c: 88:                 CCP1CONbits.DC1B++;
   284   000622  0E01               	movlw	1
   285   000624  6E04               	movwf	??_H_ISR^0,c
   286   000626  38BD               	swapf	189,w,c	;volatile
   287   000628  0B03               	andlw	3
   288   00062A  6E05               	movwf	(??_H_ISR+1)^0,c
   289   00062C  5004               	movf	??_H_ISR^0,w,c
   290   00062E  2605               	addwf	(??_H_ISR+1)^0,f,c
   291   000630  3A05               	swapf	(??_H_ISR+1)^0,f,c
   292   000632  50BD               	movf	189,w,c	;volatile
   293   000634  1805               	xorwf	(??_H_ISR+1)^0,w,c
   294   000636  0BCF               	andlw	-49
   295   000638  1805               	xorwf	(??_H_ISR+1)^0,w,c
   296   00063A  6EBD               	movwf	189,c	;volatile
   297   00063C                     
   298                           ;bonus_main.c: 89:                 _delay((unsigned long)((10)*(1000000/4000.0)));
   299   00063C  0E04               	movlw	4
   300   00063E  6E04               	movwf	??_H_ISR^0,c
   301   000640  0E3E               	movlw	62
   302   000642                     i2u8_47:
   303   000642  2EE8               	decfsz	wreg,f,c
   304   000644  D7FE               	bra	i2u8_47
   305   000646  2E04               	decfsz	??_H_ISR^0,f,c
   306   000648  D7FC               	bra	i2u8_47
   307   00064A                     i2l742:
   308                           
   309                           ;bonus_main.c: 83:             while(CCPR1L != 0x12 || CCP1CONbits.DC1B != 0b11){
   310   00064A  0E12               	movlw	18
   311   00064C  18BE               	xorwf	190,w,c	;volatile
   312   00064E  A4D8               	btfss	status,2,c
   313   000650  EF2C  F003         	goto	i2u2_41
   314   000654  EF2E  F003         	goto	i2u2_40
   315   000658                     i2u2_41:
   316   000658  EF04  F003         	goto	i2l732
   317   00065C                     i2u2_40:
   318   00065C  38BD               	swapf	189,w,c	;volatile
   319   00065E  0B03               	andlw	3
   320   000660  0A03               	xorlw	3
   321   000662  A4D8               	btfss	status,2,c
   322   000664  EF36  F003         	goto	i2u3_41
   323   000668  EF38  F003         	goto	i2u3_40
   324   00066C                     i2u3_41:
   325   00066C  EF04  F003         	goto	i2l732
   326   000670                     i2u3_40:
   327   000670  EF5B  F003         	goto	i2l756
   328   000674                     i2l746:
   329                           
   330                           ;bonus_main.c: 97:                 if(CCP1CONbits.DC1B == 0b00){
   331   000674  38BD               	swapf	189,w,c	;volatile
   332   000676  0B03               	andlw	3
   333   000678  0900               	iorlw	0
   334   00067A  A4D8               	btfss	status,2,c
   335   00067C  EF42  F003         	goto	i2u4_41
   336   000680  EF44  F003         	goto	i2u4_40
   337   000684                     i2u4_41:
   338   000684  EF47  F003         	goto	i2l752
   339   000688                     i2u4_40:
   340   000688                     
   341                           ;bonus_main.c: 98:                     CCP1CONbits.DC1B = 0b11;
   342   000688  0E30               	movlw	48
   343   00068A  12BD               	iorwf	189,f,c	;volatile
   344   00068C                     
   345                           ;bonus_main.c: 99:                     CCPR1L--;
   346   00068C  06BE               	decf	190,f,c	;volatile
   347   00068E                     i2l752:
   348                           
   349                           ;bonus_main.c: 101:                 CCP1CONbits.DC1B--;
   350   00068E  0E01               	movlw	1
   351   000690  6E04               	movwf	??_H_ISR^0,c
   352   000692  38BD               	swapf	189,w,c	;volatile
   353   000694  0B03               	andlw	3
   354   000696  6E05               	movwf	(??_H_ISR+1)^0,c
   355   000698  5004               	movf	??_H_ISR^0,w,c
   356   00069A  5E05               	subwf	(??_H_ISR+1)^0,f,c
   357   00069C  3A05               	swapf	(??_H_ISR+1)^0,f,c
   358   00069E  50BD               	movf	189,w,c	;volatile
   359   0006A0  1805               	xorwf	(??_H_ISR+1)^0,w,c
   360   0006A2  0BCF               	andlw	-49
   361   0006A4  1805               	xorwf	(??_H_ISR+1)^0,w,c
   362   0006A6  6EBD               	movwf	189,c	;volatile
   363   0006A8                     
   364                           ;bonus_main.c: 102:                 _delay((unsigned long)((10)*(1000000/4000.0)));
   365   0006A8  0E04               	movlw	4
   366   0006AA  6E04               	movwf	??_H_ISR^0,c
   367   0006AC  0E3E               	movlw	62
   368   0006AE                     i2u9_47:
   369   0006AE  2EE8               	decfsz	wreg,f,c
   370   0006B0  D7FE               	bra	i2u9_47
   371   0006B2  2E04               	decfsz	??_H_ISR^0,f,c
   372   0006B4  D7FC               	bra	i2u9_47
   373   0006B6                     i2l756:
   374                           
   375                           ;bonus_main.c: 96:             while(CCPR1L != 0x04 || CCP1CONbits.DC1B != 0b00){
   376   0006B6  0E04               	movlw	4
   377   0006B8  18BE               	xorwf	190,w,c	;volatile
   378   0006BA  A4D8               	btfss	status,2,c
   379   0006BC  EF62  F003         	goto	i2u5_41
   380   0006C0  EF64  F003         	goto	i2u5_40
   381   0006C4                     i2u5_41:
   382   0006C4  EF3A  F003         	goto	i2l746
   383   0006C8                     i2u5_40:
   384   0006C8  38BD               	swapf	189,w,c	;volatile
   385   0006CA  0B03               	andlw	3
   386   0006CC  0900               	iorlw	0
   387   0006CE  A4D8               	btfss	status,2,c
   388   0006D0  EF6C  F003         	goto	i2u6_41
   389   0006D4  EF6E  F003         	goto	i2u6_40
   390   0006D8                     i2u6_41:
   391   0006D8  EF3A  F003         	goto	i2l746
   392   0006DC                     i2u6_40:
   393   0006DC                     i2l35:
   394                           
   395                           ;bonus_main.c: 77:     while(INTCONbits.INT0F != 0){
   396   0006DC  B2F2               	btfsc	242,1,c	;volatile
   397   0006DE  EF73  F003         	goto	i2u7_41
   398   0006E2  EF75  F003         	goto	i2u7_40
   399   0006E6                     i2u7_41:
   400   0006E6  EF25  F003         	goto	i2l742
   401   0006EA                     i2u7_40:
   402   0006EA  9206               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   403   0006EC  0011               	retfie		f
   404   0006EE                     __end_of_H_ISR:
   405                           	callstack 0
   406                           
   407                           	psect	smallconst
   408   000600                     __psmallconst:
   409                           	callstack 0
   410   000600  00                 	db	0
   411   000601  00                 	db	0	; dummy byte at the end
   412   000000                     
   413                           	psect	rparam
   414   000000                     
   415                           	psect	temp
   416   000006                     btemp:
   417                           	callstack 0
   418   000006                     	ds	1
   419   000000                     int$flags	set	btemp
   420   000000                     wtemp8	set	btemp+1
   421   000000                     ttemp5	set	btemp+1
   422   000000                     ttemp6	set	btemp+4
   423   000000                     ttemp7	set	btemp+8
   424                           
   425                           	psect	idloc
   426                           
   427                           ;Config register IDLOC0 @ 0x200000
   428                           ;	unspecified, using default values
   429   200000                     	org	2097152
   430   200000  FF                 	db	255
   431                           
   432                           ;Config register IDLOC1 @ 0x200001
   433                           ;	unspecified, using default values
   434   200001                     	org	2097153
   435   200001  FF                 	db	255
   436                           
   437                           ;Config register IDLOC2 @ 0x200002
   438                           ;	unspecified, using default values
   439   200002                     	org	2097154
   440   200002  FF                 	db	255
   441                           
   442                           ;Config register IDLOC3 @ 0x200003
   443                           ;	unspecified, using default values
   444   200003                     	org	2097155
   445   200003  FF                 	db	255
   446                           
   447                           ;Config register IDLOC4 @ 0x200004
   448                           ;	unspecified, using default values
   449   200004                     	org	2097156
   450   200004  FF                 	db	255
   451                           
   452                           ;Config register IDLOC5 @ 0x200005
   453                           ;	unspecified, using default values
   454   200005                     	org	2097157
   455   200005  FF                 	db	255
   456                           
   457                           ;Config register IDLOC6 @ 0x200006
   458                           ;	unspecified, using default values
   459   200006                     	org	2097158
   460   200006  FF                 	db	255
   461                           
   462                           ;Config register IDLOC7 @ 0x200007
   463                           ;	unspecified, using default values
   464   200007                     	org	2097159
   465   200007  FF                 	db	255
   466                           
   467                           	psect	config
   468                           
   469                           ; Padding undefined space
   470   300000                     	org	3145728
   471   300000  FF                 	db	255
   472                           
   473                           ;Config register CONFIG1H @ 0x300001
   474                           ;	Oscillator Selection bits
   475                           ;	OSC = INTIO67, Internal oscillator block, port function on RA6 and RA7
   476                           ;	Fail-Safe Clock Monitor Enable bit
   477                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   478                           ;	Internal/External Oscillator Switchover bit
   479                           ;	IESO = OFF, Oscillator Switchover mode disabled
   480   300001                     	org	3145729
   481   300001  08                 	db	8
   482                           
   483                           ;Config register CONFIG2L @ 0x300002
   484                           ;	Power-up Timer Enable bit
   485                           ;	PWRT = OFF, PWRT disabled
   486                           ;	Brown-out Reset Enable bits
   487                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
   488                           ;	Brown Out Reset Voltage bits
   489                           ;	BORV = 3, Minimum setting
   490   300002                     	org	3145730
   491   300002  1F                 	db	31
   492                           
   493                           ;Config register CONFIG2H @ 0x300003
   494                           ;	Watchdog Timer Enable bit
   495                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
   496                           ;	Watchdog Timer Postscale Select bits
   497                           ;	WDTPS = 32768, 1:32768
   498   300003                     	org	3145731
   499   300003  1E                 	db	30
   500                           
   501                           ; Padding undefined space
   502   300004                     	org	3145732
   503   300004  FF                 	db	255
   504                           
   505                           ;Config register CONFIG3H @ 0x300005
   506                           ;	CCP2 MUX bit
   507                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
   508                           ;	PORTB A/D Enable bit
   509                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
   510                           ;	Low-Power Timer1 Oscillator Enable bit
   511                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
   512                           ;	MCLR Pin Enable bit
   513                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
   514   300005                     	org	3145733
   515   300005  83                 	db	131
   516                           
   517                           ;Config register CONFIG4L @ 0x300006
   518                           ;	Stack Full/Underflow Reset Enable bit
   519                           ;	STVREN = ON, Stack full/underflow will cause Reset
   520                           ;	Single-Supply ICSP Enable bit
   521                           ;	LVP = OFF, Single-Supply ICSP disabled
   522                           ;	Extended Instruction Set Enable bit
   523                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   524                           ;	Background Debugger Enable bit
   525                           ;	DEBUG = 0x1, unprogrammed default
   526   300006                     	org	3145734
   527   300006  81                 	db	129
   528                           
   529                           ; Padding undefined space
   530   300007                     	org	3145735
   531   300007  FF                 	db	255
   532                           
   533                           ;Config register CONFIG5L @ 0x300008
   534                           ;	Code Protection bit
   535                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
   536                           ;	Code Protection bit
   537                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
   538                           ;	Code Protection bit
   539                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
   540                           ;	Code Protection bit
   541                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
   542   300008                     	org	3145736
   543   300008  0F                 	db	15
   544                           
   545                           ;Config register CONFIG5H @ 0x300009
   546                           ;	Boot Block Code Protection bit
   547                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
   548                           ;	Data EEPROM Code Protection bit
   549                           ;	CPD = OFF, Data EEPROM not code-protected
   550   300009                     	org	3145737
   551   300009  C0                 	db	192
   552                           
   553                           ;Config register CONFIG6L @ 0x30000A
   554                           ;	Write Protection bit
   555                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
   556                           ;	Write Protection bit
   557                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
   558                           ;	Write Protection bit
   559                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
   560                           ;	Write Protection bit
   561                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
   562   30000A                     	org	3145738
   563   30000A  0F                 	db	15
   564                           
   565                           ;Config register CONFIG6H @ 0x30000B
   566                           ;	Configuration Register Write Protection bit
   567                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
   568                           ;	Boot Block Write Protection bit
   569                           ;	WRTB = OFF, Boot block (000000-0007FFh) not write-protected
   570                           ;	Data EEPROM Write Protection bit
   571                           ;	WRTD = OFF, Data EEPROM not write-protected
   572   30000B                     	org	3145739
   573   30000B  E0                 	db	224
   574                           
   575                           ;Config register CONFIG7L @ 0x30000C
   576                           ;	Table Read Protection bit
   577                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
   578                           ;	Table Read Protection bit
   579                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
   580                           ;	Table Read Protection bit
   581                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
   582                           ;	Table Read Protection bit
   583                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
   584   30000C                     	org	3145740
   585   30000C  0F                 	db	15
   586                           
   587                           ;Config register CONFIG7H @ 0x30000D
   588                           ;	Boot Block Table Read Protection bit
   589                           ;	EBTRB = OFF, Boot block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
   590   30000D                     	org	3145741
   591   30000D  40                 	db	64
   592                           tosu	equ	0xFFF
   593                           tosh	equ	0xFFE
   594                           tosl	equ	0xFFD
   595                           stkptr	equ	0xFFC
   596                           pclatu	equ	0xFFB
   597                           pclath	equ	0xFFA
   598                           pcl	equ	0xFF9
   599                           tblptru	equ	0xFF8
   600                           tblptrh	equ	0xFF7
   601                           tblptrl	equ	0xFF6
   602                           tablat	equ	0xFF5
   603                           prodh	equ	0xFF4
   604                           prodl	equ	0xFF3
   605                           indf0	equ	0xFEF
   606                           postinc0	equ	0xFEE
   607                           postdec0	equ	0xFED
   608                           preinc0	equ	0xFEC
   609                           plusw0	equ	0xFEB
   610                           fsr0h	equ	0xFEA
   611                           fsr0l	equ	0xFE9
   612                           wreg	equ	0xFE8
   613                           indf1	equ	0xFE7
   614                           postinc1	equ	0xFE6
   615                           postdec1	equ	0xFE5
   616                           preinc1	equ	0xFE4
   617                           plusw1	equ	0xFE3
   618                           fsr1h	equ	0xFE2
   619                           fsr1l	equ	0xFE1
   620                           bsr	equ	0xFE0
   621                           indf2	equ	0xFDF
   622                           postinc2	equ	0xFDE
   623                           postdec2	equ	0xFDD
   624                           preinc2	equ	0xFDC
   625                           plusw2	equ	0xFDB
   626                           fsr2h	equ	0xFDA
   627                           fsr2l	equ	0xFD9
   628                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126      2       5
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           244      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _H_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _H_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _H_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _H_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _H_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _H_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _H_ISR in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _H_ISR                                                2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _H_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5F3      0       0      30        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK4           100      0       0      11        0.0%
BANK4              100      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0       0      10        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK5            F4      0       0      13        0.0%
BANK5               F4      0       0      14        0.0%
BITBANK0            80      0       0       3        0.0%
BANK0               80      0       0       4        0.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E      2       5       1        4.0%
BITBIGSFR_1l        20      0       0      24        0.0%
BITBIGSFR_5h         A      0       0      15        0.0%
BITBIGSFRlhl         9      0       0      27        0.0%
BITBIGSFR_1hhl       8      0       0      22        0.0%
BITBIGSFRlhh         7      0       0      26        0.0%
BITBIGSFRh           7      0       0      25        0.0%
BITBIGSFR_2          6      0       0      19        0.0%
BITBIGSFR_1hhhl      4      0       0      21        0.0%
BITBIGSFR_4          3      0       0      17        0.0%
BITBIGSFR_3          3      0       0      18        0.0%
BITBIGSFR_1hhhh      2      0       0      20        0.0%
BITBIGSFR_1hl        2      0       0      23        0.0%
BITBIGSFR_5l         2      0       0      16        0.0%
BITBIGSFRll          1      0       0      28        0.0%
BIGSFR_5             0      0       0     200        0.0%
BIGSFR_4             0      0       0     200        0.0%
BIGSFR_3             0      0       0     200        0.0%
BIGSFR_2             0      0       0     200        0.0%
BIGSFR_1             0      0       0     200        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       5      29        0.0%
DATA                 0      0       5      31        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Thu Jan 04 16:04:44 2024

                     l51 072E                       l52 072E                      l760 06EE  
                    l770 071E                      l762 06F2                      l772 0720  
                    l764 070C                      l766 071A                      l768 071C  
                    _PR2 0FCB                      wreg 0FE8                     _LATC 0F8B  
                   i2l35 06DC                     i2l46 06EA                     _main 06EE  
                   btemp 0006                     start 000E             ___param_bank 0000  
                  ?_main 0004                    i2l730 0604                    i2l740 063C  
                  i2l732 0608                    i2l750 068C                    i2l742 064A  
                  i2l734 061C                    i2l752 068E                    i2l744 065C  
                  i2l736 0620                    i2l754 06A8                    i2l746 0674  
                  i2l738 0622                    i2l748 0688                    i2l756 06B6  
                  i2l758 06C8                    _H_ISR 0008                    _PORTB 0F81  
                  _TRISC 0F94                    _cycle 0001                    _count 0003  
                  ttemp5 0007                    ttemp6 000A                    ttemp7 000E  
                  status 0FD8                    wtemp8 0007          __initialization 0736  
           __end_of_main 0736                   ??_main 0006            __activetblptr 0000  
                 ?_H_ISR 0004                   _ADCON1 0FC1                   _CCPR1L 0FBE  
                 i2u1_40 061C                   i2u1_41 0618                   i2u2_40 065C  
                 i2u2_41 0658                   i2u3_40 0670                   i2u3_41 066C  
                 i2u4_40 0688                   i2u4_41 0684                   i2u5_40 06C8  
                 i2u5_41 06C4                   i2u6_40 06DC                   i2u6_41 06D8  
                 i2u7_40 06EA                   i2u7_41 06E6                   i2u8_47 0642  
                 i2u9_47 06AE                   isa$std 0001             __mediumconst 0000  
             __accesstop 0080  __end_of__initialization 073C            ___rparam_used 0001  
          __end_of_H_ISR 06EE           __pcstackCOMRAM 0004                  ??_H_ISR 0004  
                __Hparam 0000                  __Lparam 0000             __psmallconst 0600  
                __pcinit 0736                  __ramtop 0600                  __ptext0 06EE  
              _T2CONbits 0FCA           __pintcode_body 0602     end_of_initialization 073C  
                int_func 0602                _TRISBbits 0F93              _CCP1CONbits 0FBD  
    start_initialization 0736              __pbssCOMRAM 0001                __pintcode 0008  
            __smallconst 0600                 _RCONbits 0FD0                 __Hrparam 0000  
               __Lrparam 0000                 isa$xinst 0000                 int$flags 0006  
             _INTCONbits 0FF2                 intlevel2 0000               _OSCCONbits 0FD3  
