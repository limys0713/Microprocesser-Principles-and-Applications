

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Thu Dec 21 00:05:52 2023

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=2
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1
    14                           	psect	text6,global,reloc=2,class=CODE,delta=1
    15                           	psect	text7,global,reloc=2,class=CODE,delta=1
    16                           	psect	text8,global,reloc=2,class=CODE,delta=1
    17                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    18                           	psect	text10,global,reloc=2,class=CODE,delta=1
    19                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text12,global,reloc=2,class=CODE,delta=1
    21                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    22                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    23                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    24                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    25                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    26                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    27   000000                     
    28                           ; Generated 18/08/2023 GMT
    29                           ; 
    30                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    31                           ; All rights reserved.
    32                           ; 
    33                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    34                           ; 
    35                           ; Redistribution and use in source and binary forms, with or without modification, are
    36                           ; permitted provided that the following conditions are met:
    37                           ; 
    38                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    39                           ;        conditions and the following disclaimer.
    40                           ; 
    41                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    42                           ;        of conditions and the following disclaimer in the documentation and/or other
    43                           ;        materials provided with the distribution. Publication is not required when
    44                           ;        this file is used in an embedded application.
    45                           ; 
    46                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    47                           ;        software without specific prior written permission.
    48                           ; 
    49                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    50                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    51                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    52                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    53                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    54                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    55                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    56                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    57                           ; 
    58                           ; 
    59                           ; Code-generator required, PIC18F4520 Definitions
    60                           ; 
    61                           ; SFR Addresses
    62   000000                     _RCREG	set	4014
    63   000000                     _TXREG	set	4013
    64   000000                     _PIE1bits	set	3997
    65   000000                     _SPBRG	set	4015
    66   000000                     _BAUDCONbits	set	4024
    67   000000                     _PIR1bits	set	3998
    68   000000                     _CCP1CON	set	4029
    69   000000                     _ADCON0bits	set	4034
    70   000000                     _ADRESL	set	4035
    71   000000                     _ADRESH	set	4036
    72   000000                     _ADCON1	set	4033
    73   000000                     _ADFM	set	32263
    74   000000                     _ADCON2bits	set	4032
    75   000000                     _CREN	set	32092
    76   000000                     _IRCF0	set	32412
    77   000000                     _IRCF1	set	32413
    78   000000                     _TRISA	set	3986
    79   000000                     _INTCONbits	set	4082
    80   000000                     _TRISCbits	set	3988
    81   000000                     _RCONbits	set	4048
    82   000000                     _RCSTAbits	set	4011
    83   000000                     _TXSTAbits	set	4012
    84   000000                     _IPR1bits	set	3999
    85   000000                     _IRCF2	set	32414
    86                           
    87                           ; #config settings
    88                           
    89                           	psect	cinit
    90   000774                     __pcinit:
    91                           	callstack 0
    92   000774                     start_initialization:
    93                           	callstack 0
    94   000774                     __initialization:
    95                           	callstack 0
    96                           
    97                           ; Clear objects allocated to COMRAM (42 bytes)
    98   000774  EE00  F001         	lfsr	0,__pbssCOMRAM
    99   000778  0E2A               	movlw	42
   100   00077A                     clear_0:
   101   00077A  6AEE               	clrf	postinc0,c
   102   00077C  06E8               	decf	wreg,f,c
   103   00077E  E1FD               	bnz	clear_0
   104   000780                     end_of_initialization:
   105                           	callstack 0
   106   000780                     __end_of__initialization:
   107                           	callstack 0
   108   000780  903C               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   109   000782  923C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   110   000784  0100               	movlb	0
   111   000786  EFAD  F003         	goto	_main	;jump to C main() function
   112                           
   113                           	psect	bssCOMRAM
   114   000001                     __pbssCOMRAM:
   115                           	callstack 0
   116   000001                     _lenStr:
   117                           	callstack 0
   118   000001                     	ds	2
   119   000003                     _mystring:
   120                           	callstack 0
   121   000003                     	ds	20
   122   000017                     _str:
   123                           	callstack 0
   124   000017                     	ds	20
   125                           
   126                           	psect	cstackCOMRAM
   127   00002B                     __pcstackCOMRAM:
   128                           	callstack 0
   129   00002B                     ?___awmod:
   130                           	callstack 0
   131   00002B                     UART_Write@data:
   132                           	callstack 0
   133   00002B                     ___awmod@dividend:
   134                           	callstack 0
   135                           
   136                           ; 2 bytes @ 0x0
   137   00002B                     	ds	2
   138   00002D                     ___awmod@divisor:
   139                           	callstack 0
   140                           
   141                           ; 2 bytes @ 0x2
   142   00002D                     	ds	2
   143   00002F                     ___awmod@counter:
   144                           	callstack 0
   145                           
   146                           ; 1 bytes @ 0x4
   147   00002F                     	ds	1
   148   000030                     ___awmod@sign:
   149                           	callstack 0
   150                           
   151                           ; 1 bytes @ 0x5
   152   000030                     	ds	1
   153   000031                     
   154                           ; 1 bytes @ 0x6
   155   000031                     	ds	1
   156   000032                     ??_Lo_ISR:
   157                           
   158                           ; 1 bytes @ 0x7
   159   000032                     	ds	5
   160   000037                     
   161                           ; 1 bytes @ 0xC
   162   000037                     	ds	2
   163   000039                     strcpy@dest:
   164                           	callstack 0
   165                           
   166                           ; 1 bytes @ 0xE
   167   000039                     	ds	1
   168   00003A                     strcpy@src:
   169                           	callstack 0
   170                           
   171                           ; 1 bytes @ 0xF
   172   00003A                     	ds	1
   173   00003B                     strcpy@d:
   174                           	callstack 0
   175                           
   176                           ; 1 bytes @ 0x10
   177   00003B                     	ds	1
   178   00003C                     
   179                           ; 1 bytes @ 0x11
   180 ;;
   181 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   182 ;;
   183 ;; *************** function _main *****************
   184 ;; Defined at:
   185 ;;		line 15 in file "main.c"
   186 ;; Parameters:    Size  Location     Type
   187 ;;		None
   188 ;; Auto vars:     Size  Location     Type
   189 ;;		None
   190 ;; Return value:  Size  Location     Type
   191 ;;                  1    wreg      void 
   192 ;; Registers used:
   193 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
   194 ;; Tracked objects:
   195 ;;		On entry : 0/0
   196 ;;		On exit  : 0/0
   197 ;;		Unchanged: 0/0
   198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   199 ;;      Params:         0       0       0       0       0       0       0
   200 ;;      Locals:         0       0       0       0       0       0       0
   201 ;;      Temps:          0       0       0       0       0       0       0
   202 ;;      Totals:         0       0       0       0       0       0       0
   203 ;;Total ram usage:        0 bytes
   204 ;; Hardware stack levels required when called: 5
   205 ;; This function calls:
   206 ;;		_GetString
   207 ;;		_SYSTEM_Initialize
   208 ;;		_strcpy
   209 ;; This function is called by:
   210 ;;		Startup code after reset
   211 ;; This function uses a non-reentrant model
   212 ;;
   213                           
   214                           	psect	text0
   215   00075A                     __ptext0:
   216                           	callstack 0
   217   00075A                     _main:
   218                           	callstack 26
   219   00075A                     
   220                           ;main.c: 17:     SYSTEM_Initialize() ;
   221   00075A  ECC5  F003         	call	_SYSTEM_Initialize	;wreg free
   222   00075E                     l1021:
   223                           
   224                           ;main.c: 20:         strcpy(str, GetString());
   225   00075E  0E17               	movlw	low _str
   226   000760  6E39               	movwf	strcpy@dest^0,c
   227   000762  ECF4  F003         	call	_GetString	;wreg free
   228   000766  6E3A               	movwf	strcpy@src^0,c
   229   000768  EC87  F003         	call	_strcpy	;wreg free
   230   00076C  EFAF  F003         	goto	l1021
   231   000770  EF36  F000         	goto	start
   232   000774                     __end_of_main:
   233                           	callstack 0
   234                           
   235 ;; *************** function _strcpy *****************
   236 ;; Defined at:
   237 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\strcpy.c"
   238 ;; Parameters:    Size  Location     Type
   239 ;;  dest            1   14[COMRAM] PTR unsigned char 
   240 ;;		 -> str(20), 
   241 ;;  src             1   15[COMRAM] PTR const unsigned char 
   242 ;;		 -> mystring(20), 
   243 ;; Auto vars:     Size  Location     Type
   244 ;;  d               1   16[COMRAM] PTR unsigned char 
   245 ;;		 -> str(20), 
   246 ;; Return value:  Size  Location     Type
   247 ;;                  1    wreg      PTR unsigned char 
   248 ;; Registers used:
   249 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
   250 ;; Tracked objects:
   251 ;;		On entry : 0/0
   252 ;;		On exit  : 0/0
   253 ;;		Unchanged: 0/0
   254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   255 ;;      Params:         2       0       0       0       0       0       0
   256 ;;      Locals:         1       0       0       0       0       0       0
   257 ;;      Temps:          0       0       0       0       0       0       0
   258 ;;      Totals:         3       0       0       0       0       0       0
   259 ;;Total ram usage:        3 bytes
   260 ;; Hardware stack levels used: 1
   261 ;; Hardware stack levels required when called: 3
   262 ;; This function calls:
   263 ;;		Nothing
   264 ;; This function is called by:
   265 ;;		_main
   266 ;; This function uses a non-reentrant model
   267 ;;
   268                           
   269                           	psect	text1
   270   00070E                     __ptext1:
   271                           	callstack 0
   272   00070E                     _strcpy:
   273                           	callstack 27
   274   00070E  C039  F03B         	movff	strcpy@dest,strcpy@d
   275   000712                     l1005:
   276   000712  2A3A               	incf	strcpy@src^0,f,c
   277   000714  043A               	decf	strcpy@src^0,w,c
   278   000716  6ED9               	movwf	fsr2l,c
   279   000718  6ADA               	clrf	fsr2h,c
   280   00071A  2A3B               	incf	strcpy@d^0,f,c
   281   00071C  043B               	decf	strcpy@d^0,w,c
   282   00071E  6EE1               	movwf	fsr1l,c
   283   000720  6AE2               	clrf	fsr1h,c
   284   000722  CFDF FFE7          	movff	indf2,indf1
   285   000726  50E7               	movf	indf1,w,c
   286   000728  A4D8               	btfss	status,2,c
   287   00072A  EF99  F003         	goto	u201
   288   00072E  EF9B  F003         	goto	u200
   289   000732                     u201:
   290   000732  EF89  F003         	goto	l1005
   291   000736                     u200:
   292   000736  0012               	return		;funcret
   293   000738                     __end_of_strcpy:
   294                           	callstack 0
   295                           
   296 ;; *************** function _SYSTEM_Initialize *****************
   297 ;; Defined at:
   298 ;;		line 60 in file "setting_hardaware/setting.c"
   299 ;; Parameters:    Size  Location     Type
   300 ;;		None
   301 ;; Auto vars:     Size  Location     Type
   302 ;;		None
   303 ;; Return value:  Size  Location     Type
   304 ;;                  1    wreg      void 
   305 ;; Registers used:
   306 ;;		wreg, status,2, cstack
   307 ;; Tracked objects:
   308 ;;		On entry : 0/0
   309 ;;		On exit  : 0/0
   310 ;;		Unchanged: 0/0
   311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   312 ;;      Params:         0       0       0       0       0       0       0
   313 ;;      Locals:         0       0       0       0       0       0       0
   314 ;;      Temps:          0       0       0       0       0       0       0
   315 ;;      Totals:         0       0       0       0       0       0       0
   316 ;;Total ram usage:        0 bytes
   317 ;; Hardware stack levels used: 1
   318 ;; Hardware stack levels required when called: 4
   319 ;; This function calls:
   320 ;;		_ADC_Initialize
   321 ;;		_CCP1_Initialize
   322 ;;		_INTERRUPT_Initialize
   323 ;;		_OSCILLATOR_Initialize
   324 ;;		_UART_Initialize
   325 ;; This function is called by:
   326 ;;		_main
   327 ;; This function uses a non-reentrant model
   328 ;;
   329                           
   330                           	psect	text2
   331   00078A                     __ptext2:
   332                           	callstack 0
   333   00078A                     _SYSTEM_Initialize:
   334                           	callstack 26
   335   00078A                     
   336                           ;setting_hardaware/setting.c: 63:     OSCILLATOR_Initialize();
   337   00078A  ECEC  F003         	call	_OSCILLATOR_Initialize	;wreg free
   338                           
   339                           ;setting_hardaware/setting.c: 67:     INTERRUPT_Initialize();
   340   00078E  ECF0  F003         	call	_INTERRUPT_Initialize	;wreg free
   341   000792                     
   342                           ;setting_hardaware/setting.c: 68:     UART_Initialize();
   343   000792  EC9C  F003         	call	_UART_Initialize	;wreg free
   344   000796                     
   345                           ;setting_hardaware/setting.c: 69:     CCP1_Initialize();
   346   000796  ECE6  F003         	call	_CCP1_Initialize	;wreg free
   347   00079A                     
   348                           ;setting_hardaware/setting.c: 70:     ADC_Initialize();
   349   00079A  ECD0  F003         	call	_ADC_Initialize	;wreg free
   350   00079E  0012               	return		;funcret
   351   0007A0                     __end_of_SYSTEM_Initialize:
   352                           	callstack 0
   353                           
   354 ;; *************** function _UART_Initialize *****************
   355 ;; Defined at:
   356 ;;		line 7 in file "setting_hardaware/uart.c"
   357 ;; Parameters:    Size  Location     Type
   358 ;;		None
   359 ;; Auto vars:     Size  Location     Type
   360 ;;		None
   361 ;; Return value:  Size  Location     Type
   362 ;;                  1    wreg      void 
   363 ;; Registers used:
   364 ;;		wreg, status,2
   365 ;; Tracked objects:
   366 ;;		On entry : 0/0
   367 ;;		On exit  : 0/0
   368 ;;		Unchanged: 0/0
   369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   370 ;;      Params:         0       0       0       0       0       0       0
   371 ;;      Locals:         0       0       0       0       0       0       0
   372 ;;      Temps:          0       0       0       0       0       0       0
   373 ;;      Totals:         0       0       0       0       0       0       0
   374 ;;Total ram usage:        0 bytes
   375 ;; Hardware stack levels used: 1
   376 ;; Hardware stack levels required when called: 3
   377 ;; This function calls:
   378 ;;		Nothing
   379 ;; This function is called by:
   380 ;;		_SYSTEM_Initialize
   381 ;; This function uses a non-reentrant model
   382 ;;
   383                           
   384                           	psect	text3
   385   000738                     __ptext3:
   386                           	callstack 0
   387   000738                     _UART_Initialize:
   388                           	callstack 26
   389   000738                     
   390                           ;setting_hardaware/uart.c: 17:     TRISCbits.RC6 = 1 ;
   391   000738  8C94               	bsf	148,6,c	;volatile
   392                           
   393                           ;setting_hardaware/uart.c: 18:     TRISCbits.RC7 = 1 ;
   394   00073A  8E94               	bsf	148,7,c	;volatile
   395                           
   396                           ;setting_hardaware/uart.c: 21:     TXSTAbits.SYNC = 0;
   397   00073C  98AC               	bcf	172,4,c	;volatile
   398                           
   399                           ;setting_hardaware/uart.c: 22:     BAUDCONbits.BRG16 = 0;
   400   00073E  96B8               	bcf	184,3,c	;volatile
   401                           
   402                           ;setting_hardaware/uart.c: 23:     TXSTAbits.BRGH = 0;
   403   000740  94AC               	bcf	172,2,c	;volatile
   404   000742                     
   405                           ;setting_hardaware/uart.c: 24:     SPBRG = 51;
   406   000742  0E33               	movlw	51
   407   000744  6EAF               	movwf	175,c	;volatile
   408   000746                     
   409                           ;setting_hardaware/uart.c: 27:     RCSTAbits.SPEN = 1;
   410   000746  8EAB               	bsf	171,7,c	;volatile
   411   000748                     
   412                           ;setting_hardaware/uart.c: 28:     RCSTAbits.CREN = 1;
   413   000748  88AB               	bsf	171,4,c	;volatile
   414   00074A                     
   415                           ;setting_hardaware/uart.c: 29:     TXSTAbits.TXEN = 1;
   416   00074A  8AAC               	bsf	172,5,c	;volatile
   417   00074C                     
   418                           ;setting_hardaware/uart.c: 30:     PIR1bits.TXIF = 1;
   419   00074C  889E               	bsf	158,4,c	;volatile
   420   00074E                     
   421                           ;setting_hardaware/uart.c: 31:     PIR1bits.RCIF = 0;
   422   00074E  9A9E               	bcf	158,5,c	;volatile
   423   000750                     
   424                           ;setting_hardaware/uart.c: 32:     IPR1bits.RCIP = 0;
   425   000750  9A9F               	bcf	159,5,c	;volatile
   426   000752                     
   427                           ;setting_hardaware/uart.c: 33:     PIE1bits.RCIE = 1;
   428   000752  8A9D               	bsf	157,5,c	;volatile
   429   000754                     
   430                           ;setting_hardaware/uart.c: 34:     IPR1bits.TXIP = 0;
   431   000754  989F               	bcf	159,4,c	;volatile
   432   000756                     
   433                           ;setting_hardaware/uart.c: 35:     PIE1bits.TXIE = 0;
   434   000756  989D               	bcf	157,4,c	;volatile
   435   000758  0012               	return		;funcret
   436   00075A                     __end_of_UART_Initialize:
   437                           	callstack 0
   438                           
   439 ;; *************** function _OSCILLATOR_Initialize *****************
   440 ;; Defined at:
   441 ;;		line 73 in file "setting_hardaware/setting.c"
   442 ;; Parameters:    Size  Location     Type
   443 ;;		None
   444 ;; Auto vars:     Size  Location     Type
   445 ;;		None
   446 ;; Return value:  Size  Location     Type
   447 ;;                  1    wreg      void 
   448 ;; Registers used:
   449 ;;		None
   450 ;; Tracked objects:
   451 ;;		On entry : 0/0
   452 ;;		On exit  : 0/0
   453 ;;		Unchanged: 0/0
   454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   455 ;;      Params:         0       0       0       0       0       0       0
   456 ;;      Locals:         0       0       0       0       0       0       0
   457 ;;      Temps:          0       0       0       0       0       0       0
   458 ;;      Totals:         0       0       0       0       0       0       0
   459 ;;Total ram usage:        0 bytes
   460 ;; Hardware stack levels used: 1
   461 ;; Hardware stack levels required when called: 3
   462 ;; This function calls:
   463 ;;		Nothing
   464 ;; This function is called by:
   465 ;;		_SYSTEM_Initialize
   466 ;; This function uses a non-reentrant model
   467 ;;
   468                           
   469                           	psect	text4
   470   0007D8                     __ptext4:
   471                           	callstack 0
   472   0007D8                     _OSCILLATOR_Initialize:
   473                           	callstack 26
   474   0007D8                     
   475                           ;setting_hardaware/setting.c: 75:     IRCF2 = 1;
   476   0007D8  8CD3               	bsf	4051,6,c	;volatile
   477                           
   478                           ;setting_hardaware/setting.c: 76:     IRCF1 = 1;
   479   0007DA  8AD3               	bsf	4051,5,c	;volatile
   480                           
   481                           ;setting_hardaware/setting.c: 77:     IRCF0 = 0;
   482   0007DC  98D3               	bcf	4051,4,c	;volatile
   483   0007DE  0012               	return		;funcret
   484   0007E0                     __end_of_OSCILLATOR_Initialize:
   485                           	callstack 0
   486                           
   487 ;; *************** function _INTERRUPT_Initialize *****************
   488 ;; Defined at:
   489 ;;		line 3 in file "setting_hardaware/interrupt_manager.c"
   490 ;; Parameters:    Size  Location     Type
   491 ;;		None
   492 ;; Auto vars:     Size  Location     Type
   493 ;;		None
   494 ;; Return value:  Size  Location     Type
   495 ;;                  1    wreg      void 
   496 ;; Registers used:
   497 ;;		None
   498 ;; Tracked objects:
   499 ;;		On entry : 0/0
   500 ;;		On exit  : 0/0
   501 ;;		Unchanged: 0/0
   502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   503 ;;      Params:         0       0       0       0       0       0       0
   504 ;;      Locals:         0       0       0       0       0       0       0
   505 ;;      Temps:          0       0       0       0       0       0       0
   506 ;;      Totals:         0       0       0       0       0       0       0
   507 ;;Total ram usage:        0 bytes
   508 ;; Hardware stack levels used: 1
   509 ;; Hardware stack levels required when called: 3
   510 ;; This function calls:
   511 ;;		Nothing
   512 ;; This function is called by:
   513 ;;		_SYSTEM_Initialize
   514 ;; This function uses a non-reentrant model
   515 ;;
   516                           
   517                           	psect	text5
   518   0007E0                     __ptext5:
   519                           	callstack 0
   520   0007E0                     _INTERRUPT_Initialize:
   521                           	callstack 26
   522   0007E0                     
   523                           ;setting_hardaware/interrupt_manager.c: 5:     RCONbits.IPEN = 1;
   524   0007E0  8ED0               	bsf	208,7,c	;volatile
   525                           
   526                           ;setting_hardaware/interrupt_manager.c: 6:     INTCONbits.GIEH = 1;
   527   0007E2  8EF2               	bsf	242,7,c	;volatile
   528                           
   529                           ;setting_hardaware/interrupt_manager.c: 7:     INTCONbits.GIEL = 1;
   530   0007E4  8CF2               	bsf	242,6,c	;volatile
   531   0007E6  0012               	return		;funcret
   532   0007E8                     __end_of_INTERRUPT_Initialize:
   533                           	callstack 0
   534                           
   535 ;; *************** function _CCP1_Initialize *****************
   536 ;; Defined at:
   537 ;;		line 3 in file "setting_hardaware/ccp1.c"
   538 ;; Parameters:    Size  Location     Type
   539 ;;		None
   540 ;; Auto vars:     Size  Location     Type
   541 ;;		None
   542 ;; Return value:  Size  Location     Type
   543 ;;                  1    wreg      void 
   544 ;; Registers used:
   545 ;;		wreg, status,2
   546 ;; Tracked objects:
   547 ;;		On entry : 0/0
   548 ;;		On exit  : 0/0
   549 ;;		Unchanged: 0/0
   550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   551 ;;      Params:         0       0       0       0       0       0       0
   552 ;;      Locals:         0       0       0       0       0       0       0
   553 ;;      Temps:          0       0       0       0       0       0       0
   554 ;;      Totals:         0       0       0       0       0       0       0
   555 ;;Total ram usage:        0 bytes
   556 ;; Hardware stack levels used: 1
   557 ;; Hardware stack levels required when called: 3
   558 ;; This function calls:
   559 ;;		Nothing
   560 ;; This function is called by:
   561 ;;		_SYSTEM_Initialize
   562 ;; This function uses a non-reentrant model
   563 ;;
   564                           
   565                           	psect	text6
   566   0007CC                     __ptext6:
   567                           	callstack 0
   568   0007CC                     _CCP1_Initialize:
   569                           	callstack 26
   570   0007CC                     
   571                           ;setting_hardaware/ccp1.c: 4:     TRISCbits.TRISC2=0;
   572   0007CC  9494               	bcf	148,2,c	;volatile
   573   0007CE                     
   574                           ;setting_hardaware/ccp1.c: 5:     CCP1CON=9;
   575   0007CE  0E09               	movlw	9
   576   0007D0  6EBD               	movwf	189,c	;volatile
   577   0007D2                     
   578                           ;setting_hardaware/ccp1.c: 6:     PIR1bits.CCP1IF=0;
   579   0007D2  949E               	bcf	158,2,c	;volatile
   580   0007D4                     
   581                           ;setting_hardaware/ccp1.c: 7:     IPR1bits.CCP1IP = 1;
   582   0007D4  849F               	bsf	159,2,c	;volatile
   583   0007D6  0012               	return		;funcret
   584   0007D8                     __end_of_CCP1_Initialize:
   585                           	callstack 0
   586                           
   587 ;; *************** function _ADC_Initialize *****************
   588 ;; Defined at:
   589 ;;		line 3 in file "setting_hardaware/adc.c"
   590 ;; Parameters:    Size  Location     Type
   591 ;;		None
   592 ;; Auto vars:     Size  Location     Type
   593 ;;		None
   594 ;; Return value:  Size  Location     Type
   595 ;;                  1    wreg      void 
   596 ;; Registers used:
   597 ;;		wreg, status,2
   598 ;; Tracked objects:
   599 ;;		On entry : 0/0
   600 ;;		On exit  : 0/0
   601 ;;		Unchanged: 0/0
   602 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   603 ;;      Params:         0       0       0       0       0       0       0
   604 ;;      Locals:         0       0       0       0       0       0       0
   605 ;;      Temps:          0       0       0       0       0       0       0
   606 ;;      Totals:         0       0       0       0       0       0       0
   607 ;;Total ram usage:        0 bytes
   608 ;; Hardware stack levels used: 1
   609 ;; Hardware stack levels required when called: 3
   610 ;; This function calls:
   611 ;;		Nothing
   612 ;; This function is called by:
   613 ;;		_SYSTEM_Initialize
   614 ;; This function uses a non-reentrant model
   615 ;;
   616                           
   617                           	psect	text7
   618   0007A0                     __ptext7:
   619                           	callstack 0
   620   0007A0                     _ADC_Initialize:
   621                           	callstack 26
   622   0007A0                     
   623                           ;setting_hardaware/adc.c: 4:     TRISA = 0xff;
   624   0007A0  6892               	setf	146,c	;volatile
   625   0007A2                     
   626                           ;setting_hardaware/adc.c: 5:     ADCON1 = 0x0e;
   627   0007A2  0E0E               	movlw	14
   628   0007A4  6EC1               	movwf	193,c	;volatile
   629   0007A6                     
   630                           ;setting_hardaware/adc.c: 7:     ADFM = 1 ;
   631   0007A6  8EC0               	bsf	4032,7,c	;volatile
   632                           
   633                           ;setting_hardaware/adc.c: 8:     ADCON2bits.ADCS = 7;
   634   0007A8  0E07               	movlw	7
   635   0007AA  12C0               	iorwf	192,f,c	;volatile
   636                           
   637                           ;setting_hardaware/adc.c: 9:     ADRESH=0;
   638   0007AC  0E00               	movlw	0
   639   0007AE  6EC4               	movwf	196,c	;volatile
   640                           
   641                           ;setting_hardaware/adc.c: 10:     ADRESL=0;
   642   0007B0  0E00               	movlw	0
   643   0007B2  6EC3               	movwf	195,c	;volatile
   644   0007B4  0012               	return		;funcret
   645   0007B6                     __end_of_ADC_Initialize:
   646                           	callstack 0
   647                           
   648 ;; *************** function _GetString *****************
   649 ;; Defined at:
   650 ;;		line 71 in file "setting_hardaware/uart.c"
   651 ;; Parameters:    Size  Location     Type
   652 ;;		None
   653 ;; Auto vars:     Size  Location     Type
   654 ;;		None
   655 ;; Return value:  Size  Location     Type
   656 ;;                  1    wreg      PTR unsigned char 
   657 ;; Registers used:
   658 ;;		wreg
   659 ;; Tracked objects:
   660 ;;		On entry : 0/0
   661 ;;		On exit  : 0/0
   662 ;;		Unchanged: 0/0
   663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   664 ;;      Params:         2       0       0       0       0       0       0
   665 ;;      Locals:         0       0       0       0       0       0       0
   666 ;;      Temps:          0       0       0       0       0       0       0
   667 ;;      Totals:         2       0       0       0       0       0       0
   668 ;;Total ram usage:        2 bytes
   669 ;; Hardware stack levels used: 1
   670 ;; Hardware stack levels required when called: 3
   671 ;; This function calls:
   672 ;;		Nothing
   673 ;; This function is called by:
   674 ;;		_main
   675 ;; This function uses a non-reentrant model
   676 ;;
   677                           
   678                           	psect	text8
   679   0007E8                     __ptext8:
   680                           	callstack 0
   681   0007E8                     _GetString:
   682                           	callstack 27
   683   0007E8                     
   684                           ;setting_hardaware/uart.c: 73:     return mystring;
   685   0007E8  0E03               	movlw	_mystring& (0+255)
   686   0007EA  0012               	return		;funcret
   687   0007EC                     __end_of_GetString:
   688                           	callstack 0
   689                           
   690 ;; *************** function _Lo_ISR *****************
   691 ;; Defined at:
   692 ;;		line 88 in file "setting_hardaware/uart.c"
   693 ;; Parameters:    Size  Location     Type
   694 ;;		None
   695 ;; Auto vars:     Size  Location     Type
   696 ;;		None
   697 ;; Return value:  Size  Location     Type
   698 ;;                  1    wreg      void 
   699 ;; Registers used:
   700 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   701 ;; Tracked objects:
   702 ;;		On entry : 0/0
   703 ;;		On exit  : 0/0
   704 ;;		Unchanged: 0/0
   705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   706 ;;      Params:         0       0       0       0       0       0       0
   707 ;;      Locals:         0       0       0       0       0       0       0
   708 ;;      Temps:          5       0       0       0       0       0       0
   709 ;;      Totals:         5       0       0       0       0       0       0
   710 ;;Total ram usage:        5 bytes
   711 ;; Hardware stack levels used: 1
   712 ;; Hardware stack levels required when called: 2
   713 ;; This function calls:
   714 ;;		_MyusartRead
   715 ;; This function is called by:
   716 ;;		Interrupt level 1
   717 ;; This function uses a non-reentrant model
   718 ;;
   719                           
   720                           	psect	intcodelo
   721   000018                     __pintcodelo:
   722                           	callstack 0
   723   000018                     _Lo_ISR:
   724                           	callstack 26
   725                           
   726                           ;incstack = 0
   727   000018  803C               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
   728   00001A  CFD8 F032          	movff	status,??_Lo_ISR
   729   00001E  CFE8 F033          	movff	wreg,??_Lo_ISR+1
   730   000022  CFE0 F034          	movff	bsr,??_Lo_ISR+2
   731   000026  CFD9 F035          	movff	fsr2l,??_Lo_ISR+3
   732   00002A  CFDA F036          	movff	fsr2h,??_Lo_ISR+4
   733   00002E                     
   734                           ;setting_hardaware/uart.c: 90:     if(PIR1bits.RCIF){
   735   00002E  AA9E               	btfss	158,5,c	;volatile
   736   000030  EF1C  F000         	goto	i1u22_21
   737   000034  EF1E  F000         	goto	i1u22_20
   738   000038                     i1u22_21:
   739   000038  EF2A  F000         	goto	i1l135
   740   00003C                     i1u22_20:
   741   00003C                     
   742                           ;setting_hardaware/uart.c: 91:         if(RCSTAbits.OERR)
   743   00003C  A2AB               	btfss	171,1,c	;volatile
   744   00003E  EF23  F000         	goto	i1u23_21
   745   000042  EF25  F000         	goto	i1u23_20
   746   000046                     i1u23_21:
   747   000046  EF28  F000         	goto	i1l1029
   748   00004A                     i1u23_20:
   749   00004A                     
   750                           ;setting_hardaware/uart.c: 92:             {;setting_hardaware/uart.c: 93:              
      +                             CREN = 0;
   751   00004A  98AB               	bcf	4011,4,c	;volatile
   752                           
   753                           ;setting_hardaware/uart.c: 94:                 __nop();
   754   00004C  0000               	nop	
   755                           
   756                           ;setting_hardaware/uart.c: 95:                 CREN = 1;
   757   00004E  88AB               	bsf	4011,4,c	;volatile
   758   000050                     i1l1029:
   759                           
   760                           ;setting_hardaware/uart.c: 98:         MyusartRead();
   761   000050  EC59  F003         	call	_MyusartRead	;wreg free
   762   000054                     i1l135:
   763   000054  C036  FFDA         	movff	??_Lo_ISR+4,fsr2h
   764   000058  C035  FFD9         	movff	??_Lo_ISR+3,fsr2l
   765   00005C  C034  FFE0         	movff	??_Lo_ISR+2,bsr
   766   000060  C033  FFE8         	movff	??_Lo_ISR+1,wreg
   767   000064  C032  FFD8         	movff	??_Lo_ISR,status
   768   000068  903C               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   769   00006A  0010               	retfie	
   770   00006C                     __end_of_Lo_ISR:
   771                           	callstack 0
   772                           
   773 ;; *************** function _MyusartRead *****************
   774 ;; Defined at:
   775 ;;		line 56 in file "setting_hardaware/uart.c"
   776 ;; Parameters:    Size  Location     Type
   777 ;;		None
   778 ;; Auto vars:     Size  Location     Type
   779 ;;		None
   780 ;; Return value:  Size  Location     Type
   781 ;;                  1    wreg      void 
   782 ;; Registers used:
   783 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   784 ;; Tracked objects:
   785 ;;		On entry : 0/0
   786 ;;		On exit  : 0/0
   787 ;;		Unchanged: 0/0
   788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   789 ;;      Params:         0       0       0       0       0       0       0
   790 ;;      Locals:         0       0       0       0       0       0       0
   791 ;;      Temps:          1       0       0       0       0       0       0
   792 ;;      Totals:         1       0       0       0       0       0       0
   793 ;;Total ram usage:        1 bytes
   794 ;; Hardware stack levels used: 1
   795 ;; Hardware stack levels required when called: 1
   796 ;; This function calls:
   797 ;;		_UART_Write
   798 ;;		___awmod
   799 ;; This function is called by:
   800 ;;		_Lo_ISR
   801 ;; This function uses a non-reentrant model
   802 ;;
   803                           
   804                           	psect	text10
   805   0006B2                     __ptext10:
   806                           	callstack 0
   807   0006B2                     _MyusartRead:
   808                           	callstack 26
   809   0006B2                     
   810                           ;setting_hardaware/uart.c: 59:     mystring[lenStr] = RCREG;
   811   0006B2  5001               	movf	_lenStr^0,w,c
   812   0006B4  0F03               	addlw	low _mystring
   813   0006B6  6ED9               	movwf	fsr2l,c
   814   0006B8  6ADA               	clrf	fsr2h,c
   815   0006BA  CFAE FFDF          	movff	4014,indf2	;volatile
   816                           
   817                           ;setting_hardaware/uart.c: 60:     if (mystring[lenStr] == '\r')
   818   0006BE  5001               	movf	_lenStr^0,w,c
   819   0006C0  0F03               	addlw	low _mystring
   820   0006C2  6ED9               	movwf	fsr2l,c
   821   0006C4  6ADA               	clrf	fsr2h,c
   822   0006C6  0E0D               	movlw	13
   823   0006C8  18DE               	xorwf	postinc2,w,c
   824   0006CA  A4D8               	btfss	status,2,c
   825   0006CC  EF6A  F003         	goto	i1u21_21
   826   0006D0  EF6C  F003         	goto	i1u21_20
   827   0006D4                     i1u21_21:
   828   0006D4  EF6F  F003         	goto	i1l1011
   829   0006D8                     i1u21_20:
   830   0006D8                     
   831                           ;setting_hardaware/uart.c: 61:         UART_Write('\n');
   832   0006D8  0E0A               	movlw	10
   833   0006DA  ECDB  F003         	call	_UART_Write
   834   0006DE                     i1l1011:
   835                           
   836                           ;setting_hardaware/uart.c: 62:     UART_Write(mystring[lenStr]);
   837   0006DE  5001               	movf	_lenStr^0,w,c
   838   0006E0  0F03               	addlw	low _mystring
   839   0006E2  6ED9               	movwf	fsr2l,c
   840   0006E4  6ADA               	clrf	fsr2h,c
   841   0006E6  50DF               	movf	indf2,w,c
   842   0006E8  ECDB  F003         	call	_UART_Write
   843   0006EC                     
   844                           ;setting_hardaware/uart.c: 65:     lenStr++;
   845   0006EC  4A01               	infsnz	_lenStr^0,f,c
   846   0006EE  2A02               	incf	(_lenStr+1)^0,f,c
   847   0006F0                     
   848                           ;setting_hardaware/uart.c: 66:     lenStr %= 10;
   849   0006F0  C001  F02B         	movff	_lenStr,___awmod@dividend
   850   0006F4  C002  F02C         	movff	_lenStr+1,___awmod@dividend+1
   851   0006F8  0E00               	movlw	0
   852   0006FA  6E2E               	movwf	(___awmod@divisor+1)^0,c
   853   0006FC  0E0A               	movlw	10
   854   0006FE  6E2D               	movwf	___awmod@divisor^0,c
   855   000700  EC01  F003         	call	___awmod	;wreg free
   856   000704  C02B  F001         	movff	?___awmod,_lenStr
   857   000708  C02C  F002         	movff	?___awmod+1,_lenStr+1
   858   00070C  0012               	return		;funcret
   859   00070E                     __end_of_MyusartRead:
   860                           	callstack 0
   861                           
   862 ;; *************** function ___awmod *****************
   863 ;; Defined at:
   864 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awmod.c"
   865 ;; Parameters:    Size  Location     Type
   866 ;;  dividend        2    0[COMRAM] int 
   867 ;;  divisor         2    2[COMRAM] int 
   868 ;; Auto vars:     Size  Location     Type
   869 ;;  sign            1    5[COMRAM] unsigned char 
   870 ;;  counter         1    4[COMRAM] unsigned char 
   871 ;; Return value:  Size  Location     Type
   872 ;;                  2    0[COMRAM] int 
   873 ;; Registers used:
   874 ;;		wreg, status,2, status,0
   875 ;; Tracked objects:
   876 ;;		On entry : 0/0
   877 ;;		On exit  : 0/0
   878 ;;		Unchanged: 0/0
   879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   880 ;;      Params:         4       0       0       0       0       0       0
   881 ;;      Locals:         2       0       0       0       0       0       0
   882 ;;      Temps:          0       0       0       0       0       0       0
   883 ;;      Totals:         6       0       0       0       0       0       0
   884 ;;Total ram usage:        6 bytes
   885 ;; Hardware stack levels used: 1
   886 ;; This function calls:
   887 ;;		Nothing
   888 ;; This function is called by:
   889 ;;		_MyusartRead
   890 ;; This function uses a non-reentrant model
   891 ;;
   892                           
   893                           	psect	text11
   894   000602                     __ptext11:
   895                           	callstack 0
   896   000602                     ___awmod:
   897                           	callstack 26
   898   000602  0E00               	movlw	0
   899   000604  6E30               	movwf	___awmod@sign^0,c
   900   000606  BE2C               	btfsc	(___awmod@dividend+1)^0,7,c
   901   000608  EF0A  F003         	goto	i1u14_20
   902   00060C  EF08  F003         	goto	i1u14_21
   903   000610                     i1u14_21:
   904   000610  EF10  F003         	goto	i1l971
   905   000614                     i1u14_20:
   906   000614  6C2B               	negf	___awmod@dividend^0,c
   907   000616  1E2C               	comf	(___awmod@dividend+1)^0,f,c
   908   000618  B0D8               	btfsc	status,0,c
   909   00061A  2A2C               	incf	(___awmod@dividend+1)^0,f,c
   910   00061C  0E01               	movlw	1
   911   00061E  6E30               	movwf	___awmod@sign^0,c
   912   000620                     i1l971:
   913   000620  BE2E               	btfsc	(___awmod@divisor+1)^0,7,c
   914   000622  EF17  F003         	goto	i1u15_20
   915   000626  EF15  F003         	goto	i1u15_21
   916   00062A                     i1u15_21:
   917   00062A  EF1B  F003         	goto	i1l975
   918   00062E                     i1u15_20:
   919   00062E  6C2D               	negf	___awmod@divisor^0,c
   920   000630  1E2E               	comf	(___awmod@divisor+1)^0,f,c
   921   000632  B0D8               	btfsc	status,0,c
   922   000634  2A2E               	incf	(___awmod@divisor+1)^0,f,c
   923   000636                     i1l975:
   924   000636  502D               	movf	___awmod@divisor^0,w,c
   925   000638  102E               	iorwf	(___awmod@divisor+1)^0,w,c
   926   00063A  B4D8               	btfsc	status,2,c
   927   00063C  EF22  F003         	goto	i1u16_21
   928   000640  EF24  F003         	goto	i1u16_20
   929   000644                     i1u16_21:
   930   000644  EF48  F003         	goto	i1l991
   931   000648                     i1u16_20:
   932   000648  0E01               	movlw	1
   933   00064A  6E2F               	movwf	___awmod@counter^0,c
   934   00064C  EF2C  F003         	goto	i1l981
   935   000650                     i1l979:
   936   000650  90D8               	bcf	status,0,c
   937   000652  362D               	rlcf	___awmod@divisor^0,f,c
   938   000654  362E               	rlcf	(___awmod@divisor+1)^0,f,c
   939   000656  2A2F               	incf	___awmod@counter^0,f,c
   940   000658                     i1l981:
   941   000658  AE2E               	btfss	(___awmod@divisor+1)^0,7,c
   942   00065A  EF31  F003         	goto	i1u17_21
   943   00065E  EF33  F003         	goto	i1u17_20
   944   000662                     i1u17_21:
   945   000662  EF28  F003         	goto	i1l979
   946   000666                     i1u17_20:
   947   000666                     i1l983:
   948   000666  502D               	movf	___awmod@divisor^0,w,c
   949   000668  5C2B               	subwf	___awmod@dividend^0,w,c
   950   00066A  502E               	movf	(___awmod@divisor+1)^0,w,c
   951   00066C  582C               	subwfb	(___awmod@dividend+1)^0,w,c
   952   00066E  A0D8               	btfss	status,0,c
   953   000670  EF3C  F003         	goto	i1u18_21
   954   000674  EF3E  F003         	goto	i1u18_20
   955   000678                     i1u18_21:
   956   000678  EF42  F003         	goto	i1l987
   957   00067C                     i1u18_20:
   958   00067C  502D               	movf	___awmod@divisor^0,w,c
   959   00067E  5E2B               	subwf	___awmod@dividend^0,f,c
   960   000680  502E               	movf	(___awmod@divisor+1)^0,w,c
   961   000682  5A2C               	subwfb	(___awmod@dividend+1)^0,f,c
   962   000684                     i1l987:
   963   000684  90D8               	bcf	status,0,c
   964   000686  322E               	rrcf	(___awmod@divisor+1)^0,f,c
   965   000688  322D               	rrcf	___awmod@divisor^0,f,c
   966   00068A  2E2F               	decfsz	___awmod@counter^0,f,c
   967   00068C  EF33  F003         	goto	i1l983
   968   000690                     i1l991:
   969   000690  5030               	movf	___awmod@sign^0,w,c
   970   000692  B4D8               	btfsc	status,2,c
   971   000694  EF4E  F003         	goto	i1u19_21
   972   000698  EF50  F003         	goto	i1u19_20
   973   00069C                     i1u19_21:
   974   00069C  EF54  F003         	goto	i1l995
   975   0006A0                     i1u19_20:
   976   0006A0  6C2B               	negf	___awmod@dividend^0,c
   977   0006A2  1E2C               	comf	(___awmod@dividend+1)^0,f,c
   978   0006A4  B0D8               	btfsc	status,0,c
   979   0006A6  2A2C               	incf	(___awmod@dividend+1)^0,f,c
   980   0006A8                     i1l995:
   981   0006A8  C02B  F02B         	movff	___awmod@dividend,?___awmod
   982   0006AC  C02C  F02C         	movff	___awmod@dividend+1,?___awmod+1
   983   0006B0  0012               	return		;funcret
   984   0006B2                     __end_of___awmod:
   985                           	callstack 0
   986                           
   987 ;; *************** function _UART_Write *****************
   988 ;; Defined at:
   989 ;;		line 38 in file "setting_hardaware/uart.c"
   990 ;; Parameters:    Size  Location     Type
   991 ;;  data            1    wreg     unsigned char 
   992 ;; Auto vars:     Size  Location     Type
   993 ;;  data            1    0[COMRAM] unsigned char 
   994 ;; Return value:  Size  Location     Type
   995 ;;                  1    wreg      void 
   996 ;; Registers used:
   997 ;;		wreg
   998 ;; Tracked objects:
   999 ;;		On entry : 0/0
  1000 ;;		On exit  : 0/0
  1001 ;;		Unchanged: 0/0
  1002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1003 ;;      Params:         0       0       0       0       0       0       0
  1004 ;;      Locals:         1       0       0       0       0       0       0
  1005 ;;      Temps:          0       0       0       0       0       0       0
  1006 ;;      Totals:         1       0       0       0       0       0       0
  1007 ;;Total ram usage:        1 bytes
  1008 ;; Hardware stack levels used: 1
  1009 ;; This function calls:
  1010 ;;		Nothing
  1011 ;; This function is called by:
  1012 ;;		_MyusartRead
  1013 ;; This function uses a non-reentrant model
  1014 ;;
  1015                           
  1016                           	psect	text12
  1017   0007B6                     __ptext12:
  1018                           	callstack 0
  1019   0007B6                     _UART_Write:
  1020                           	callstack 26
  1021                           
  1022                           ;incstack = 0
  1023                           ;UART_Write@data stored from wreg
  1024   0007B6  6E2B               	movwf	UART_Write@data^0,c
  1025   0007B8                     i1l113:
  1026   0007B8  A2AC               	btfss	172,1,c	;volatile
  1027   0007BA  EFE1  F003         	goto	i1u1_21
  1028   0007BE  EFE3  F003         	goto	i1u1_20
  1029   0007C2                     i1u1_21:
  1030   0007C2  EFDC  F003         	goto	i1l113
  1031   0007C6                     i1u1_20:
  1032   0007C6                     
  1033                           ;setting_hardaware/uart.c: 41:     TXREG = data;
  1034   0007C6  C02B  FFAD         	movff	UART_Write@data,4013	;volatile
  1035   0007CA  0012               	return		;funcret
  1036   0007CC                     __end_of_UART_Write:
  1037                           	callstack 0
  1038                           
  1039                           	psect	smallconst
  1040   000600                     __psmallconst:
  1041                           	callstack 0
  1042   000600  00                 	db	0
  1043   000601  00                 	db	0	; dummy byte at the end
  1044   000000                     
  1045                           	psect	rparam
  1046   000000                     
  1047                           	psect	temp
  1048   00003C                     btemp:
  1049                           	callstack 0
  1050   00003C                     	ds	1
  1051   000000                     int$flags	set	btemp
  1052   000000                     wtemp8	set	btemp+1
  1053   000000                     ttemp5	set	btemp+1
  1054   000000                     ttemp6	set	btemp+4
  1055   000000                     ttemp7	set	btemp+8
  1056                           
  1057                           	psect	idloc
  1058                           
  1059                           ;Config register IDLOC0 @ 0x200000
  1060                           ;	unspecified, using default values
  1061   200000                     	org	2097152
  1062   200000  FF                 	db	255
  1063                           
  1064                           ;Config register IDLOC1 @ 0x200001
  1065                           ;	unspecified, using default values
  1066   200001                     	org	2097153
  1067   200001  FF                 	db	255
  1068                           
  1069                           ;Config register IDLOC2 @ 0x200002
  1070                           ;	unspecified, using default values
  1071   200002                     	org	2097154
  1072   200002  FF                 	db	255
  1073                           
  1074                           ;Config register IDLOC3 @ 0x200003
  1075                           ;	unspecified, using default values
  1076   200003                     	org	2097155
  1077   200003  FF                 	db	255
  1078                           
  1079                           ;Config register IDLOC4 @ 0x200004
  1080                           ;	unspecified, using default values
  1081   200004                     	org	2097156
  1082   200004  FF                 	db	255
  1083                           
  1084                           ;Config register IDLOC5 @ 0x200005
  1085                           ;	unspecified, using default values
  1086   200005                     	org	2097157
  1087   200005  FF                 	db	255
  1088                           
  1089                           ;Config register IDLOC6 @ 0x200006
  1090                           ;	unspecified, using default values
  1091   200006                     	org	2097158
  1092   200006  FF                 	db	255
  1093                           
  1094                           ;Config register IDLOC7 @ 0x200007
  1095                           ;	unspecified, using default values
  1096   200007                     	org	2097159
  1097   200007  FF                 	db	255
  1098                           
  1099                           	psect	config
  1100                           
  1101                           ; Padding undefined space
  1102   300000                     	org	3145728
  1103   300000  FF                 	db	255
  1104                           
  1105                           ;Config register CONFIG1H @ 0x300001
  1106                           ;	Oscillator Selection bits
  1107                           ;	OSC = INTIO67, Internal oscillator block, port function on RA6 and RA7
  1108                           ;	Fail-Safe Clock Monitor Enable bit
  1109                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1110                           ;	Internal/External Oscillator Switchover bit
  1111                           ;	IESO = ON, Oscillator Switchover mode enabled
  1112   300001                     	org	3145729
  1113   300001  88                 	db	136
  1114                           
  1115                           ;Config register CONFIG2L @ 0x300002
  1116                           ;	Power-up Timer Enable bit
  1117                           ;	PWRT = OFF, PWRT disabled
  1118                           ;	Brown-out Reset Enable bits
  1119                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  1120                           ;	Brown Out Reset Voltage bits
  1121                           ;	BORV = 3, Minimum setting
  1122   300002                     	org	3145730
  1123   300002  1F                 	db	31
  1124                           
  1125                           ;Config register CONFIG2H @ 0x300003
  1126                           ;	Watchdog Timer Enable bit
  1127                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  1128                           ;	Watchdog Timer Postscale Select bits
  1129                           ;	WDTPS = 1, 1:1
  1130   300003                     	org	3145731
  1131   300003  00                 	db	0
  1132                           
  1133                           ; Padding undefined space
  1134   300004                     	org	3145732
  1135   300004  FF                 	db	255
  1136                           
  1137                           ;Config register CONFIG3H @ 0x300005
  1138                           ;	CCP2 MUX bit
  1139                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  1140                           ;	PORTB A/D Enable bit
  1141                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
  1142                           ;	Low-Power Timer1 Oscillator Enable bit
  1143                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  1144                           ;	MCLR Pin Enable bit
  1145                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  1146   300005                     	org	3145733
  1147   300005  83                 	db	131
  1148                           
  1149                           ;Config register CONFIG4L @ 0x300006
  1150                           ;	Stack Full/Underflow Reset Enable bit
  1151                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1152                           ;	Single-Supply ICSP Enable bit
  1153                           ;	LVP = OFF, Single-Supply ICSP disabled
  1154                           ;	Extended Instruction Set Enable bit
  1155                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  1156                           ;	Background Debugger Enable bit
  1157                           ;	DEBUG = 0x1, unprogrammed default
  1158   300006                     	org	3145734
  1159   300006  81                 	db	129
  1160                           
  1161                           ; Padding undefined space
  1162   300007                     	org	3145735
  1163   300007  FF                 	db	255
  1164                           
  1165                           ;Config register CONFIG5L @ 0x300008
  1166                           ;	Code Protection bit
  1167                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
  1168                           ;	Code Protection bit
  1169                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
  1170                           ;	Code Protection bit
  1171                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
  1172                           ;	Code Protection bit
  1173                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
  1174   300008                     	org	3145736
  1175   300008  0F                 	db	15
  1176                           
  1177                           ;Config register CONFIG5H @ 0x300009
  1178                           ;	Boot Block Code Protection bit
  1179                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  1180                           ;	Data EEPROM Code Protection bit
  1181                           ;	CPD = OFF, Data EEPROM not code-protected
  1182   300009                     	org	3145737
  1183   300009  C0                 	db	192
  1184                           
  1185                           ;Config register CONFIG6L @ 0x30000A
  1186                           ;	Write Protection bit
  1187                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
  1188                           ;	Write Protection bit
  1189                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
  1190                           ;	Write Protection bit
  1191                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
  1192                           ;	Write Protection bit
  1193                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
  1194   30000A                     	org	3145738
  1195   30000A  0F                 	db	15
  1196                           
  1197                           ;Config register CONFIG6H @ 0x30000B
  1198                           ;	Configuration Register Write Protection bit
  1199                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  1200                           ;	Boot Block Write Protection bit
  1201                           ;	WRTB = OFF, Boot block (000000-0007FFh) not write-protected
  1202                           ;	Data EEPROM Write Protection bit
  1203                           ;	WRTD = OFF, Data EEPROM not write-protected
  1204   30000B                     	org	3145739
  1205   30000B  E0                 	db	224
  1206                           
  1207                           ;Config register CONFIG7L @ 0x30000C
  1208                           ;	Table Read Protection bit
  1209                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
  1210                           ;	Table Read Protection bit
  1211                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
  1212                           ;	Table Read Protection bit
  1213                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
  1214                           ;	Table Read Protection bit
  1215                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
  1216   30000C                     	org	3145740
  1217   30000C  0F                 	db	15
  1218                           
  1219                           ;Config register CONFIG7H @ 0x30000D
  1220                           ;	Boot Block Table Read Protection bit
  1221                           ;	EBTRB = OFF, Boot block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  1222   30000D                     	org	3145741
  1223   30000D  40                 	db	64
  1224                           tosu	equ	0xFFF
  1225                           tosh	equ	0xFFE
  1226                           tosl	equ	0xFFD
  1227                           stkptr	equ	0xFFC
  1228                           pclatu	equ	0xFFB
  1229                           pclath	equ	0xFFA
  1230                           pcl	equ	0xFF9
  1231                           tblptru	equ	0xFF8
  1232                           tblptrh	equ	0xFF7
  1233                           tblptrl	equ	0xFF6
  1234                           tablat	equ	0xFF5
  1235                           prodh	equ	0xFF4
  1236                           prodl	equ	0xFF3
  1237                           indf0	equ	0xFEF
  1238                           postinc0	equ	0xFEE
  1239                           postdec0	equ	0xFED
  1240                           preinc0	equ	0xFEC
  1241                           plusw0	equ	0xFEB
  1242                           fsr0h	equ	0xFEA
  1243                           fsr0l	equ	0xFE9
  1244                           wreg	equ	0xFE8
  1245                           indf1	equ	0xFE7
  1246                           postinc1	equ	0xFE6
  1247                           postdec1	equ	0xFE5
  1248                           preinc1	equ	0xFE4
  1249                           plusw1	equ	0xFE3
  1250                           fsr1h	equ	0xFE2
  1251                           fsr1l	equ	0xFE1
  1252                           bsr	equ	0xFE0
  1253                           indf2	equ	0xFDF
  1254                           postinc2	equ	0xFDE
  1255                           postdec2	equ	0xFDD
  1256                           preinc2	equ	0xFDC
  1257                           plusw2	equ	0xFDB
  1258                           fsr2h	equ	0xFDA
  1259                           fsr2l	equ	0xFD9
  1260                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         42
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     17      59
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           244      0       0

Pointer List with Targets:

    sp__GetString	PTR unsigned char  size(1) Largest target is 20
		 -> mystring(COMRAM[20]), 

    sp__strcpy	PTR unsigned char  size(1) Largest target is 20
		 -> str(COMRAM[20]), 

    strcpy@d	PTR unsigned char  size(1) Largest target is 20
		 -> str(COMRAM[20]), 

    strcpy@dest	PTR unsigned char  size(1) Largest target is 20
		 -> str(COMRAM[20]), 

    strcpy@src	PTR const unsigned char  size(1) Largest target is 20
		 -> mystring(COMRAM[20]), 


Critical Paths under _main in COMRAM

    _main->_strcpy
    _strcpy->_GetString

Critical Paths under _Lo_ISR in COMRAM

    _Lo_ISR->_MyusartRead
    _MyusartRead->___awmod

Critical Paths under _main in BANK0

    None.

Critical Paths under _Lo_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Lo_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Lo_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Lo_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Lo_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Lo_ISR in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     225
                          _GetString
                  _SYSTEM_Initialize
                             _strcpy
 ---------------------------------------------------------------------------------
 (1) _strcpy                                               3     1      2     225
                                             14 COMRAM     3     1      2
                          _GetString (ARG)
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                     _ADC_Initialize
                    _CCP1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
                    _UART_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CCP1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _GetString                                            2     0      2       0
                                             12 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _Lo_ISR                                               5     5      0     463
                                              7 COMRAM     5     5      0
                        _MyusartRead
 ---------------------------------------------------------------------------------
 (4) _MyusartRead                                          1     1      0     463
                                              6 COMRAM     1     1      0
                         _UART_Write
                            ___awmod
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) _UART_Write                                           1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _GetString
   _SYSTEM_Initialize
     _ADC_Initialize
     _CCP1_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _UART_Initialize
   _strcpy
     _GetString (ARG)

 _Lo_ISR (ROOT)
   _MyusartRead
     _UART_Write
     ___awmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5F3      0       0      30        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK4           100      0       0      11        0.0%
BANK4              100      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0       0      10        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK5            F4      0       0      13        0.0%
BANK5               F4      0       0      14        0.0%
BITBANK0            80      0       0       3        0.0%
BANK0               80      0       0       4        0.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     11      3B       1       46.8%
BITBIGSFRl          12      0       0      28        0.0%
BITBIGSFR_1llhl      B      0       0      25        0.0%
BITBIGSFR_1hhl       B      0       0      21        0.0%
BITBIGSFR_5h         A      0       0      15        0.0%
BITBIGSFR_1llhh      8      0       0      24        0.0%
BITBIGSFRhh          7      0       0      26        0.0%
BITBIGSFR_2          6      0       0      19        0.0%
BITBIGSFR_1llhh      4      0       0      23        0.0%
BITBIGSFR_4          3      0       0      17        0.0%
BITBIGSFR_3          3      0       0      18        0.0%
BITBIGSFR_1hhh       2      0       0      20        0.0%
BITBIGSFR_1lh        2      0       0      22        0.0%
BITBIGSFR_5l         2      0       0      16        0.0%
BITBIGSFRhl          1      0       0      27        0.0%
BIGSFR_5             0      0       0     200        0.0%
BIGSFR_4             0      0       0     200        0.0%
BIGSFR_3             0      0       0     200        0.0%
BIGSFR_2             0      0       0     200        0.0%
BIGSFR_1             0      0       0     200        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      3B      29        0.0%
DATA                 0      0      3B      31        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Thu Dec 21 00:05:52 2023

                           l33 07B4                             l50 07D6                             l57 07E6  
                           l76 079E                             l79 07DE                             bsr 0FE0  
      __end_of_CCP1_Initialize 07D8                            l110 0758                            l128 07EA  
                          l821 07A6                            l901 0796                            l823 07CC  
                          l831 07E0                            l903 079A                            l815 0736  
                          l817 07A0                            l825 07CE                            l833 07D8  
                          l841 0748                            l819 07A2                            l827 07D2  
                          l851 0752                            l843 074A                            l835 0738  
                          l829 07D4                            l853 0754                            l845 074C  
                          l837 0742                            l855 0756                            l847 074E  
                          l839 0746                            l849 0750                            l897 078A  
                          l899 0792                            l999 07E8                            u200 0736  
                          u201 0732                            _str 0017                   ___awmod@sign 0030  
                          wreg 0FE8                           l1003 070E                           l1005 0712  
                         l1021 075E                           l1019 075A                           _ADFM 7E07  
                         _CREN 7D5C                           _main 075A                           fsr1h 0FE2  
                         fsr2h 0FDA                           indf1 0FE7                           indf2 0FDF  
                         fsr1l 0FE1                           fsr2l 0FD9                           btemp 003C  
                         start 006C                   ___param_bank 0000               ?_UART_Initialize 002B  
__end_of_OSCILLATOR_Initialize 07E0                          ?_main 002B                __end_of___awmod 06B2  
                        _IRCF0 7E9C                          _IRCF1 7E9D                          _IRCF2 7E9E  
                        i1l113 07B8                          i1l116 07CA                          i1l125 070C  
                        i1l135 0054                          i1l382 06B0                          i1l857 07B8  
                        i1l859 07C6                          i1l971 0620                          i1l963 0602  
                        i1l981 0658                          i1l973 062E                          i1l965 0606  
                        i1l983 0666                          i1l991 0690                          i1l975 0636  
                        i1l967 0614                          i1l993 06A0                          i1l985 067C  
                        i1l977 0648                          i1l969 061C                          i1l995 06A8  
                        i1l987 0684                          i1l979 0650                          i1l989 068A  
                        _RCREG 0FAE                          _SPBRG 0FAF                          _TRISA 0F92  
                        _TXREG 0FAD                    ?_UART_Write 002B                          ttemp5 003D  
                        ttemp6 0040                          ttemp7 0044                          status 0FD8  
                        wtemp8 003D                __initialization 0774                   __end_of_main 0774  
                       ??_main 003C               ?_CCP1_Initialize 002B                  __activetblptr 0000  
                       _ADCON1 0FC1                         _ADRESH 0FC4                         _ADRESL 0FC3  
                       i1l1011 06DE                         i1l1013 06EC                         i1l1015 06F0  
                       i1l1007 06B2                         i1l1023 002E                         i1l1009 06D8  
                       i1l1025 003C                         i1l1027 004A                         i1l1029 0050  
                       i1u1_20 07C6                         i1u1_21 07C2                         _Lo_ISR 0018  
                    ??___awmod 002F                         _lenStr 0001                         clear_0 077A  
              ___awmod@divisor 002D                         isa$std 0001                ___awmod@counter 002F  
                       _strcpy 070E                   __mediumconst 0000              _SYSTEM_Initialize 078A  
                   __accesstop 0080        __end_of__initialization 0780             ?_SYSTEM_Initialize 002B  
                ___rparam_used 0001              __end_of_GetString 07EC                 __pcstackCOMRAM 002B  
          ??_SYSTEM_Initialize 0037                  ??_MyusartRead 0031      __end_of_SYSTEM_Initialize 07A0  
                      ?_Lo_ISR 002B                        _CCP1CON 0FBD                        ?_strcpy 0039  
                      i1u21_20 06D8                        i1u21_21 06D4                   ??_UART_Write 002B  
                      i1u14_20 0614                        i1u22_20 003C                        i1u14_21 0610  
                      i1u22_21 0038                        i1u15_20 062E                        i1u23_20 004A  
                      i1u15_21 062A                        i1u23_21 0046                        i1u16_20 0648  
                      i1u16_21 0644                        i1u17_20 0666                        i1u17_21 0662  
                      i1u18_20 067C                        i1u18_21 0678                        i1u19_20 06A0  
                      i1u19_21 069C            __end_of_MyusartRead 070E                        __Hparam 0000  
                      __Lparam 0000                        ___awmod 0602             __end_of_UART_Write 07CC  
                 __psmallconst 0600                        __pcinit 0774                        __ramtop 0600  
                      __ptext0 075A                        __ptext1 070E                        __ptext2 078A  
                      __ptext3 0738                        __ptext4 07D8                        __ptext5 07E0  
                      __ptext6 07CC                        __ptext7 07A0                        __ptext8 07E8  
        _OSCILLATOR_Initialize 07D8               ___awmod@dividend 002B           end_of_initialization 0780  
                    _RCSTAbits 0FAB                        postinc0 0FEE                        postinc2 0FDE  
                      strcpy@d 003B                 UART_Write@data 002B                      _TRISCbits 0F94  
                  _MyusartRead 06B2                      _TXSTAbits 0FAC                 __end_of_Lo_ISR 006C  
 __end_of_INTERRUPT_Initialize 07E8                      _GetString 07E8                    _BAUDCONbits 0FB8  
               _ADC_Initialize 07A0         ?_OSCILLATOR_Initialize 002B                 __end_of_strcpy 0738  
          start_initialization 0774              ??_UART_Initialize 0037                       ??_Lo_ISR 0032  
       __end_of_ADC_Initialize 07B6                     ?_GetString 0037                       ??_strcpy 003B  
                  __pbssCOMRAM 0001              ??_CCP1_Initialize 0037                       ?___awmod 002B  
              ?_ADC_Initialize 002B                    __pintcodelo 0018                    __smallconst 0600  
         _INTERRUPT_Initialize 07E0                       _IPR1bits 0F9F                       _PIE1bits 0F9D  
                     _PIR1bits 0F9E                       _RCONbits 0FD0                    ??_GetString 0039  
                   _ADCON0bits 0FC2                     _ADCON2bits 0FC0                   ?_MyusartRead 002B  
        ?_INTERRUPT_Initialize 002B                       __Hrparam 0000                       __Lrparam 0000  
      ??_OSCILLATOR_Initialize 0037                _UART_Initialize 0738                       __ptext10 06B2  
                     __ptext11 0602                       __ptext12 07B6                     strcpy@dest 0039  
                     isa$xinst 0000                       int$flags 003C                       _mystring 0003  
                   _INTCONbits 0FF2                _CCP1_Initialize 07CC         ??_INTERRUPT_Initialize 0037  
                     intlevel1 0000                      strcpy@src 003A               ??_ADC_Initialize 0037  
      __end_of_UART_Initialize 075A                     _UART_Write 07B6  
